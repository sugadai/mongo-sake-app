{"version":3,"sources":["script.js"],"names":["tasksDOM","document","querySelector","formDOM","sakeinputDOM","getElementById","saketypeDOM","showTasks","_ref","tasks","allTasks","regeneratorRuntime","async","_context","prev","next","awrap","axios","get","sent","data","length","innerHTML","abrupt","map","task","completed","_id","saketype","sakename","join","t0","console","log","stop","addEventListener","event","_context2","value","post","formAlertDOM","style","display","textContent","classList","add","setTimeout","preventDefault","remove","element","id","_context3","target","parentElement","dataset"],"mappings":"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","file":"script.min.js","sourcesContent":["const tasksDOM = document.querySelector('.tasks');\nconst formDOM = document.querySelector('.task-form');\nconst sakeinputDOM = document.getElementById('sake-input');\n// const saketypeDOM = document.getElementById('saketype-input');\nconst formAlertDOM = document.querySelector('.form-alert');\nconst saketypeDOM = document.getElementById('saketype');\n\n\n// /api/v1/tasksからタスクを読み込む\nconst showTasks = async () =>{\n    try {\n        //実作apiにアクセス\n        const {data: tasks} = await axios.get(\"/api/v1/tasks\");\n        //タスクがない時の表示\n        // console.log(tasks[0]._id);\n        if(tasks.length < 1){\n            tasksDOM.innerHTML = `<h5 class=\"empty-list\">酒のデータがありません。</h5>`;\n            return\n        }\n        //タスクを出力\n        const allTasks = tasks.map((task) => {\n            const {completed, _id, saketype, sakename} = task;\n            return             `<div class=\"single-task ${completed && \"task-completed\"}\">\n            <h5>\n                <span><i class=\"far fa-check-circle\"></i></span>${sakename}\n                <span><i ></i></span>${saketype}\n            </h5>\n            <div class=\"task-links\">\n                <!-- 編集リンク -->\n                <a href=\"edit.html?id=${_id}\" class=\"edit-link\">\n                    <i class=\"fas fa-edit\"></i>\n                </a>\n                <button type=\"button\" class=\"delete-btn\" data-id=\"${_id}\">\n                    <i class=\"fas fa-trash\"></i>\n                </button>\n            </div>\n        </div>`;\n        }).join(\"\");\n        // console.log(allTasks)\n        tasksDOM.innerHTML = allTasks;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nshowTasks();\n\n//タスクの新規作成\nformDOM.addEventListener('submit',async (event)=>{\n    event.preventDefault();\n    // console.log(sakeType.value);\n    // console.log(sakeinputDOM,saketypeDOM)\n    const sakename = sakeinputDOM.value;\n    const saketype = saketypeDOM.value;\n    try {\n        await axios.post(\"/api/v1/tasks\",{sakename : sakename,saketype : saketype});\n        showTasks();\n        sakeinputDOM.value = \"\";\n        formAlertDOM.style.display = \"block\";\n        formAlertDOM.textContent = \"日本酒を追加しました。\";\n        formAlertDOM.classList.add(\"text-success\");\n    } catch (error) {\n        console.log(error)\n        formAlertDOM.style.display = \"block\";\n        formAlertDOM.innerHTML = '無効です。もう一度やり直して下さい。'\n    }\n    setTimeout(()=>{\n        formAlertDOM.style.display = \"none\"\n        formAlertDOM.classList.remove(\"text-success\");\n    },3000);\n});\n\n//タスクの削除\ntasksDOM.addEventListener('click',async(event) => {\n    const element = event.target;\n    // console.log(element.parentElement);\n    if(element.parentElement.classList.contains(\"delete-btn\")){\n        const id = element.parentElement.dataset.id;\n        // console.log(id)\n        try {\n            await axios.delete(`/api/v1/tasks/${id}`);\n            showTasks();\n        } catch (error) {\n            console.log(error)\n        }\n    }\n})"]}